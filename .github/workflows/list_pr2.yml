name: List Merged PRs for Release

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  list-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List PRs and Prepare Slack Message
        id: list-prs
        run: |
          PR_NUMBERS=()
          
          declare -A SEEN_PR_NUMBERS 
          declare -A PR_AUTHOR_BY_NUMBER
          declare -A PR_TITLE_BY_NUMBER

          COMMIT_OIDS=$(gh pr view ${{ github.event.pull_request.number }} --json commits --jq '.commits[].oid')

          for COMMIT_OID in $COMMIT_OIDS; do
            echo "Commit: $COMMIT_OID"

            PR_DETAILS=$(gh pr list --search "$COMMIT_OID" --state merged --json number,author,title --jq '.[0]')

            PR_NUMBER=$(echo "$PR_DETAILS" | jq -r '.number')
            PR_AUTHOR=$(echo "$PR_DETAILS" | jq -r '.author.login')
            PR_TITLE=$(echo "$PR_DETAILS" | jq -r '.title')

            if [[ -z "${SEEN_PR_NUMBERS[$PR_NUMBER]}" ]]; then
              PR_NUMBERS+=("$PR_NUMBER")
              SEEN_PR_NUMBERS["$PR_NUMBER"]=1

              PR_AUTHOR_BY_NUMBER["$PR_NUMBER"]="$PR_AUTHOR"
              PR_TITLE_BY_NUMBER["$PR_NUMBER"]="$PR_TITLE"
            fi
          done

          REPO_OWNER=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f1)
          REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2)

          # Slackメッセージを構築（1行にまとめる）
          SLACK_TEXT="Merged PRs in #${{ github.event.pull_request.number }}: "

          if [ ${#PR_NUMBERS[@]} -eq 0 ]; then
            SLACK_TEXT+="No merged PRs found."
          else
            PR_LIST=""
            for PR_NUMBER in "${PR_NUMBERS[@]}"; do
              PR_AUTHOR="${PR_AUTHOR_BY_NUMBER[$PR_NUMBER]}"
              PR_TITLE="${PR_TITLE_BY_NUMBER[$PR_NUMBER]}"
              PR_LINK="https://github.com/$REPO_OWNER/$REPO_NAME/pull/$PR_NUMBER"
              
              # Slackリンク形式を使用しつつ、シンプルに1行で結合
              PR_LIST+="<${PR_LINK}|#${PR_NUMBER}> (${PR_TITLE}, Author: ${PR_AUTHOR}), "
            done
            # 最後のカンマとスペースを削除
            PR_LIST=${PR_LIST%, }
            SLACK_TEXT+="${PR_LIST}"
          fi

          # エスケープ処理（特殊文字を安全に）
          SLACK_TEXT=$(echo "$SLACK_TEXT" | sed 's/"/\\"/g' | sed "s/'/\\'/g" | tr -d '\n\r')

          # GitHub Actions の出力に設定
          echo "$SLACK_TEXT"
          echo "slack_message=$SLACK_TEXT" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send to Slack
        uses: slackapi/slack-github-action@v2.0.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_OAUTH_TOKEN }}
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {"text": "${{ steps.list-prs.outputs.slack_message }}"}