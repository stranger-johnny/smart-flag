name: List Merged PRs for Release

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  list-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List PRs with the commit hash
        run: |
          PR_NUMBERS=()

          declare -A PR_AUTHOR_BY_NUMBER
          declare -A PR_TITLE_BY_NUMBER

          COMMIT_OIDS=$(gh pr view ${{ github.event.pull_request.number }} --json commits --jq '.commits[].oid')

          for COMMIT_OID in $COMMIT_OIDS; do
            echo "Commit: $COMMIT_OID"
          
            PR_DETAILS_JSON=$(gh pr list --search "$COMMIT_OID" --state merged --json number,author,title --jq '.[0]')

            PR_NUMBER=$(echo "$PR_DETAILS_JSON" | jq -r '.number')
            PR_AUTHOR=$(echo "$PR_DETAILS_JSON" | jq -r '.author.login')
            PR_TITLE=$(echo "$PR_DETAILS_JSON" | jq -r '.title')

            if [ -n "$PR_NUMBER" ]; then
              PR_NUMBERS+=($PR_NUMBER)
              PR_AUTHOR_BY_NUMBER["$PR_NUMBER"]=$PR_AUTHOR
              PR_TITLE_BY_NUMBER["$PR_NUMBER"]=$PR_TITLE
            fi
          done

          PR_NUMBERS_UNIQUE=$(echo "${PR_NUMBERS[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' ')

          REPO_OWNER=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f1)
          REPO_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2)
        
          for PR_NUMBER in $PR_NUMBERS_UNIQUE; do
            PR_AUTHOR="${PR_AUTHOR_BY_NUMBER[$PR_NUMBER]}"
            PR_TITLE="${PR_TITLE_BY_NUMBER[$PR_NUMBER]}"
            PR_LINK="https://github.com/$REPO_OWNER/$REPO_NAME/pull/$PR_NUMBER"
            echo "Title: $PR_TITLE, Author: $PR_AUTHOR, PR Link: $PR_LINK"
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  