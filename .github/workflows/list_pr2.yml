name: List Merged PRs for Release

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  list-merged-prs:
    if: startsWith(github.head_ref, 'develop')
    runs-on: ubuntu-latest
    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4

      - name: GitHub CLI の認証
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: PRをリスト
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          headRef=${{ github.head_ref }}
          baseRef=${{ github.base_ref }}

          echo "🔍 Checking merged PRs included in $headRef -> $baseRef ..."

          # `develop` -> `main` の PR に含まれるコミットを取得
          commits=$(git log --pretty=format:"%H" origin/$baseRef...origin/$headRef)

          # 取得したコミットを元に PR を特定
          prs=()
          while read -r commit; do
            pr_info=$(gh pr list --state merged --json number,title,url,mergeCommit --limit 100 | jq -r --arg commit "$commit" '.[] | select(.mergeCommit == $commit) | "- [#" + (.number | tostring) + "](" + .url + ") " + .title')
            if [[ -n "$pr_info" ]]; then
              prs+=("$pr_info")
            fi
          done <<< "$commits"

          # PRが見つかったか確認
          if [[ ${#prs[@]} -eq 0 ]]; then
            echo "⚠️ No merged PRs found for this release branch."
            exit 0
          fi

          # PRリストを表示
          echo "✅ Merged PRs in this release:"
          printf "%s\n" "${prs[@]}"

          # Actionsの出力にも保存（他のジョブで使う場合）
          echo "merged_prs<<EOF" >> $GITHUB_ENV
          printf "%s\n" "${prs[@]}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
